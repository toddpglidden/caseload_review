# -*- coding: utf-8 -*-
"""Caseload Review - Dash.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1BQDUr9yGGRv9Miz-qnO0D7HI37HKgV9Z
"""

# Commented out IPython magic to ensure Python compatibility.
# %%capture
# !pip install dash gdown

import pandas as pd
import plotly.express as px
import plotly.graph_objects as go
import dash
from dash import dcc, html
from dash.dependencies import Input, Output
import requests
from io import BytesIO



"""# Number of AS Students

---


"""

st_mom_url = 'https://github.com/toddpglidden/caseload_review/raw/refs/heads/main/Status%20and%20Momentum.xlsx'

response = requests.get(st_mom_url)

status_mom_df = pd.read_excel(BytesIO(response.content))

status_mom_df = status_mom_df.rename(columns={'Account Name': 'Student Name'})

num_AS_by_mentor = status_mom_df[status_mom_df['Status'] == 'AS'].groupby('Mentor Name')['Student Name'].count()

# Commented out IPython magic to ensure Python compatibility.
# %%capture
# AS_plot = px.bar(num_AS_by_mentor, x='Student Name', y=num_AS_by_mentor.index, text= 'Student Name', title='Number AS Students by Mentor')
# AS_plot.update_traces(textposition='outside', marker_color='rgb(0,40,85)', opacity=0.85)

"""# Number Low Momentum Students by Mentor"""

low_mom = status_mom_df[status_mom_df['Momentum'].isin(['Low', 'Med Low'])].groupby('Mentor Name')['Student Name'].count()

# Commented out IPython magic to ensure Python compatibility.
# %%capture
# LM_plot = px.bar(low_mom, x='Student Name', y=low_mom.index, text='Student Name', title='Number Low Momentum Students by Mentor')
# LM_plot.update_traces(textposition='outside', marker_color='rgb(0,40,85)', opacity=0.85)

"""# Dash Code"""

# Initialize the Dash app
app = dash.Dash(__name__)

# Layout of the app
app.layout = html.Div([
    #html.H1("Number AS Students by Mentor"),
    html.Div(dcc.Graph(id='num_AS', figure=AS_plot)),
    html.Div(dcc.Graph(id='num_LM', figure=LM_plot))
])

# Run the app
if __name__ == '__main__':
    app.run(debug=True)
